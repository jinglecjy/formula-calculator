{"version":3,"names":[],"mappings":"","sources":["dataStructure.js"],"sourcesContent":["export function Stack() {\n  let arr = []\n  const push = (val) => {\n    arr.push(val)\n  }\n  const pop = () => {\n    arr = arr.slice(0, arr.length - 1)\n  }\n  const top = () => {\n    if (arr.length === 0) return null\n    else return arr[arr.length - 1]\n  }\n  const empty = () => {\n    return arr.length === 0\n  }\n  return {\n    push,\n    pop,\n    top,\n    empty,\n    arr,\n  }\n}\n\nexport function Deque() {\n  let arr = []\n  const push_front = (val) => {\n    arr.unshift(val)\n  }\n  const push_back = (val) => {\n    arr.push(val)\n  }\n  const pop_front = () => {\n    if (arr.length === 0) return null\n    let temp = arr[0]\n    arr = arr.slice(1)\n    return temp\n  }\n  const pop_back = () => {\n    if (arr.length === 0) return null\n    let temp = arr[arr.length - 1]\n    arr = arr.slice(0, arr.length - 1)\n    return temp\n  }\n  const front = () => {\n    if (arr.length === 0) return null\n    else return arr[0]\n  }\n  const back = () => {\n    if (arr.length === 0) return null\n    else return arr[arr.length - 1]\n  }\n  const empty = () => {\n    return arr.length === 0\n  }\n  return {\n    push_front,\n    push_back,\n    pop_front,\n    pop_back,\n    front,\n    back,\n    empty,\n  }\n}\n"],"file":"dataStructure.js"}